name: Test project

on: [push, pull_request, workflow_dispatch]

jobs: 
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Show secrets
        run: |
          echo ${{secrets.UNITY_EMAIL}} | sed 's/./& /g'
          echo ${{secrets.UNITY_LICENSE}} | sed 's/./& /g'
          echo ${{secrets.UNITY_PASSWORD}} | sed 's/./& /g'
  foo:
    runs-on: ubuntu-latest
    steps:
      - name: Delete huge unnecessary tools folder
        run: rm -rf /opt/hostedtoolcache

      - uses: actions/checkout@v3
  testAllModes:
    name: Test in ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - playmode
          - editmode
          - standalone
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/cache@v3
        with:
          customParameters: '-nographics'  
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}
          restore-keys: |
            Library-
      - uses: game-ci/unity-test-runner@v4
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          customParameters: '-nographics'
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Coverage results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.coveragePath }}

  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows	# Windows
          - WebGL #WebGL Build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          customParameters: '-nographics'  
          restore-keys: Library-
      - if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.3.1
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v3
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
          
  deployPages:
    needs: buildForAllSupportedPlatforms
    name: Deploy to Github Pages ðŸš€
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: gh-pages
  
      - uses: actions/download-artifact@v2
        with:
          name: Build-WebGL
          path: build
  
      - name: Update build folder
        run: |
          rm -rf gh-pages/Build/
          rm -rf gh-pages/TemplateData/
          shopt -s extglob
          cp -r build/WebGL/* gh-pages/
      
      - name: Commit and push changes
        run: |
          cd gh-pages
          git config user.name "GitHub Actions"
          git config user.email "neerajkumbar44@gmail.com"
          git add Build/*
          git commit -m "Update build folder"
          git push origin gh-pages
      - name: Unzip
        run: |
          cd gh-pages
          git config user.name "GitHub Actions"
          git config user.email "neerajkumbar44@gmail.com"
          gzip -d Build/WebGL.data.gz
          gzip -d Build/WebGL.framework.js.gz
          gzip -d Build/WebGL.wasm.gz
          git add .
          git reset HEAD index.html
          git commit -m "Unzipped files"
          git push origin gh-pages
